process PROD  =
{
  
#    source = PoolSource
#    {
#    untracked vstring fileNames = {"file:edde_hepmc.root"}
#    untracked int32 maxEvents = 100
#    }

        include "SimGeneral/HepPDTESSource/data/pdt.cfi"
	source = FlatRandomEGunSource { 
		untracked int32 maxEvents = 100
		untracked PSet PGunParameters = {
			untracked vint32 PartID = {2212} 
			untracked double MinEta = 8.5
			untracked double MaxEta = 9.9
			untracked double MinPhi = -3.14159265358979323846
			untracked double MaxPhi = 3.14159265358979323846
			untracked double MinE   = 7000.
			untracked double MaxE   = 7000.
		}
		untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
	}


# Vertex smearing
#
# There're 3 types of Vertex smearing module (Gauss, Flat, BeamProfile);
# the cff's are available for each one :
# Configuration/StandardSequences/data/VtxSmearedGauss.cff
# Configuration/StandardSequences/data/VtxSmearedNoSmear.cff
# Configuration/StandardSequences/data/VtxSmearedFlat.cff
# Configuration/StandardSequences/data/VtxSmearedBeamPreofile.cff
# Currently, we suggest using Gaussian vertex smearing

   include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"

   module o1 = PoolOutputModule { untracked string fileName = "hector_events.root" }

   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
	 untracked uint32 mix        = 12345   
      }
   }

   include "SimTransport/HectorProducer/test/HectorProdVtxSmear.cfi"
#   include "SimTransport/HectorProducer/test/HectorProdSelfSmear.cfi"

   path p1 = { VtxSmeared, LHCTransport }
   endpath outpath = { o1 }

   include "SimTransport/HectorProducer/test/MessageLogger.cfi"

}
